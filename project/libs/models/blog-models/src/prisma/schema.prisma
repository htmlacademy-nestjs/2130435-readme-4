// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PostType {
  video
  text
  quote
  photo
  reference
}

enum PostStatus {
  published
  draft
}

model Post {
  postId       Int        @id @default(autoincrement()) @map("post_id")
  repost       Boolean    @default(false)
  authorPost   String     @map("author_post")
  title        String?
  link         String?    @default("")
  announcement String?
  text         String?
  author       String?
  description  String?
  photo        String?
  size         Int?
  tags         Tag[]
  createdAt    DateTime   @default(now()) @map("created_at")
  publishAt    DateTime   @updatedAt @map("publish_at")
  userId       String?    @map("user_id")
  like         Like[]
  type         PostType
  status       PostStatus @default(published)
  comment      Comment[]

  @@map("posts")
}

model Tag {
  tagId Int    @id @default(autoincrement()) @map("tag_id")
  title String
  posts Post[]

  @@map("tags")
}

model Like {
  likeId Int     @id @default(autoincrement()) @map("like_id")
  userId String? @map("user_id")
  post   Post    @relation(fields: [likeId], references: [postId], onUpdate: Cascade, onDelete: Cascade)

  @@map("likes")
}

model Comment {
  commentId Int      @id @default(autoincrement()) @map("comment_id")
  message   String
  post      Post     @relation(fields: [postId], references: [postId])
  postId    Int      @map("post_id")
  userId    String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("comments")
}
